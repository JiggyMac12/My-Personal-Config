{
  "version": 3,
  "sources": ["../src/favorite3.tsx", "../src/utils.ts", "../src/storage.ts"],
  "sourcesContent": ["import { playSoundFromIndex } from \"./utils\";\n\nexport default async function Main() {\n  await playSoundFromIndex(3);\n}\n", "import { exec } from \"child_process\";\nimport { Item } from \"./types\";\nimport { getItem, getItems, saveItems } from \"./storage\";\nimport { environment, launchCommand, LaunchType, updateCommandMetadata } from \"@raycast/api\";\n\nexport const playSoundFromIndex = async (index: number) => {\n  const sound = await getItem(index);\n  if (sound) {\n    if (environment.launchType === LaunchType.UserInitiated) {\n      await playFile(sound);\n    }\n\n    await updateCommandMetadata({ subtitle: `Sound Name: ${sound.title}` });\n    return;\n  }\n\n  if (environment.launchType === LaunchType.UserInitiated) {\n    launchCommand({ name: \"index\", type: LaunchType.UserInitiated, context: { index: index } });\n  }\n\n  await updateCommandMetadata({ subtitle: \"Soundboard\" });\n};\n\nexport const playFile = async (item: Item) => {\n  exec(`afplay \"${item.path}\" && $$`);\n};\n\nexport const updateFavoriteSubtitles = async (item: Item) => {\n  if (item.favourite !== \"0\") {\n    await launchCommand({ name: `favorite${item.favourite}`, type: LaunchType.Background });\n  }\n\n  if (item.last_favourite && item.last_favourite !== \"0\") {\n    await launchCommand({ name: `favorite${item.last_favourite}`, type: LaunchType.Background });\n  }\n};\n\nexport const addItem = async (item: Item) => {\n  let items: Item[] = await getItems();\n\n  // Figure out if items favourite already exists in items\n  const alreadyAssignedItem = items.find((i) => i.favourite === item.favourite && i.id !== item.id);\n  if (alreadyAssignedItem) {\n    items = items.map((i) => {\n      if (i.favourite === item.favourite) {\n        i.favourite = \"0\";\n      }\n      return i;\n    });\n  }\n\n  // Figure out if item.id already exists in items and is so, replace it else add it\n  const alreadyExists = items.find((i) => i.id === item.id);\n  if (alreadyExists) {\n    items = items.map((i) => {\n      return i.id === item.id ? item : i;\n    });\n  } else {\n    items.push(item);\n  }\n\n  await saveItems(items);\n  await updateFavoriteSubtitles(item);\n\n  return items;\n};\n\nexport const removeItemEntry = async (item: Item) => {\n  let items: Item[] = await getItems();\n  items = items.filter((i) => i.id !== item.id);\n\n  await saveItems(items);\n  await updateFavoriteSubtitles(item);\n\n  return items;\n};\n", "import { LocalStorage } from \"@raycast/api\";\nimport { Item } from \"./types\";\n\nexport async function getItems(): Promise<Item[]> {\n  const items = await LocalStorage.getItem<string>(\"items\");\n  if (!items) return [];\n\n  return JSON.parse(items);\n}\n\nexport async function getItem(index: number) {\n  const items = await getItems();\n  return items.filter((x) => parseInt(x.favourite) === index)?.[0];\n}\n\nexport async function saveItems(items: Item[]) {\n  await LocalStorage.setItem(\"items\", JSON.stringify(items));\n}\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GCAA,IAAAI,EAAqB,yBCArB,IAAAC,EAA6B,wBAG7B,eAAsBC,GAA4B,CAChD,IAAMC,EAAQ,MAAM,eAAa,QAAgB,OAAO,EACxD,OAAKA,EAEE,KAAK,MAAMA,CAAK,EAFJ,CAAC,CAGtB,CAEA,eAAsBC,EAAQC,EAAe,CAE3C,OADc,MAAMH,EAAS,GAChB,OAAQI,GAAM,SAASA,EAAE,SAAS,IAAMD,CAAK,IAAI,CAAC,CACjE,CDVA,IAAAE,EAA8E,wBAEjEC,EAAqB,MAAOC,GAAkB,CACzD,IAAMC,EAAQ,MAAMC,EAAQF,CAAK,EACjC,GAAIC,EAAO,CACL,cAAY,aAAe,aAAW,eACxC,MAAME,EAASF,CAAK,EAGtB,QAAM,yBAAsB,CAAE,SAAU,eAAeA,EAAM,OAAQ,CAAC,EACtE,OAGE,cAAY,aAAe,aAAW,kBACxC,iBAAc,CAAE,KAAM,QAAS,KAAM,aAAW,cAAe,QAAS,CAAE,MAAOD,CAAM,CAAE,CAAC,EAG5F,QAAM,yBAAsB,CAAE,SAAU,YAAa,CAAC,CACxD,EAEaG,EAAW,MAAOC,GAAe,IAC5C,QAAK,WAAWA,EAAK,aAAa,CACpC,EDvBA,eAAOC,GAA8B,CACnC,MAAMC,EAAmB,CAAC,CAC5B",
  "names": ["favorite3_exports", "__export", "Main", "__toCommonJS", "import_child_process", "import_api", "getItems", "items", "getItem", "index", "x", "import_api", "playSoundFromIndex", "index", "sound", "getItem", "playFile", "item", "Main", "playSoundFromIndex"]
}
